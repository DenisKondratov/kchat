{"version":3,"sources":["config/firebase.js","components/ChatRoom.js","components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","ChatMessage","props","message","text","uid","photoURL","messageClass","currentUser","className","style","width","height","borderRadius","src","alt","ChatRoom","messageRef","firestore","collection","query","orderBy","limit","useCollectionData","idField","messages","dummy","useRef","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","trim","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","onClick","signOut","overflowX","map","msg","id","ref","onSubmit","value","onChange","target","type","SignIn","provider","GoogleAuthProvider","signInWithPopup","App","useAuthState","user","console","log","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAcAA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,gDCZMQ,EAAOR,EAASQ,OA+DtB,SAASC,EAAYC,GACnB,MAAgCA,EAAMC,QAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEbC,EAAeF,IAAQL,EAAKQ,YAAYH,IAAM,OAAS,UAE7D,OACE,sBAAKI,UAAS,6CAAwCF,GAAtD,UACE,qBAAKG,MAAO,CAACC,MAAO,GAAIC,OAAQ,GAAIC,aAAc,OAAQC,IAAKR,EAAUS,IAAI,YAC7E,4BAAIX,OAKKY,MA1EE,SAAC,GAAmB,IAC7BC,EAD4B,EAAhBC,UACWC,WAAW,YAClCC,EAAQH,EAAWI,QAAQ,aAAaC,MAAM,KAEpD,EAAiBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAL,oBACMC,EAAQC,mBAEd,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDAClBD,EAAEE,iBAEEL,EAAUM,OAHI,0DAKQnC,EAAKQ,YAAvBH,EALU,EAKVA,IAAKC,EALK,EAKLA,SALK,SAOZW,EAAWmB,IAAI,CACnBhC,KAAMyB,EACNQ,UAAW7C,EAAS0B,UAAUoB,WAAWC,kBACzClC,MACAC,aAXgB,OAclBwB,EAAa,IAEbJ,EAAMc,QAAQC,eAAe,CAAEC,SAAU,WAhBvB,2CAAH,sDAuBjB,OACE,qCACE,yBAAQjC,UAAU,2DAAlB,UACE,oBAAIA,UAAU,OAAd,2CACA,wBAAQkC,QARE,WACd3C,EAAK4C,WAOyBnC,UAAU,iBAApC,wBAIF,sBAAKA,UAAU,WAAWC,MAAO,CAACmC,UAAW,UAA7C,UACGpB,GACCA,EAASqB,KAAI,SAACC,GAAD,OACX,cAAC9C,EAAD,CAA0BE,QAAS4C,EAAK/C,KAAMA,GAA5B+C,EAAIC,OAG1B,qBAAKC,IAAKvB,OAGZ,uBAAMwB,SAAUnB,EAAatB,UAAU,qCAAvC,UACE,uBACAA,UAAU,yBACR0C,MAAOtB,EACPuB,SAAU,SAACpB,GAAD,OAAOF,EAAaE,EAAEqB,OAAOF,UAEzC,wBAAQG,KAAK,SAAS7C,UAAU,kBAAhC,yBC9CO8C,EAbA,SAAC,GAAc,IAAZvD,EAAW,EAAXA,KAMhB,OACE,wBAAQ2C,QANe,WACvB,IAAMa,EAAW,IAAIhE,EAASQ,KAAKyD,mBACnCzD,EAAK0D,gBAAgBF,IAIc/C,UAAU,kBAA7C,iCCJET,EAAOR,EAASQ,OAChBkB,EAAY1B,EAAS0B,YAoBZyC,MAlBf,WAEE,MAAiBC,YAAa5D,GAAtB6D,EAAR,oBAEA,OADAC,QAAQC,IAAI/D,EAAKQ,aAEf,qCACE,2BAKA,yBAASC,UAAU,0CAA0CC,MAAO,CAACsD,OAAQ,UAA7E,SACIH,EAAO,cAAC,EAAD,CAAU7D,KAAMA,EAAMkB,UAAWA,IAAgB,cAAC,EAAD,CAAQlB,KAAMA,EAAM6D,KAAMA,UCR7EI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4eeccb3a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpLZrm1KWIrTsiJ7MFLLc7l1YQ0WKMtPc\",\n  authDomain: \"kchat-6433f.firebaseapp.com\",\n  projectId: \"kchat-6433f\",\n  storageBucket: \"kchat-6433f.appspot.com\",\n  messagingSenderId: \"150724511779\",\n  appId: \"1:150724511779:web:457e3cbfec9dafcc4f8996\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import firebase from \"../config/firebase\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useRef, useState } from \"react\";\n\nconst auth = firebase.auth();\n\nconst ChatRoom = ({ firestore }) => {\n  const messageRef = firestore.collection(\"messages\");\n  const query = messageRef.orderBy(\"createdAt\").limit(100);\n\n  let [messages] = useCollectionData(query, { idField: \"id\" });\n  const dummy = useRef();\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    if(!formValue.trim()) return\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messageRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue(\"\");\n\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const SignOut = () => {\n    auth.signOut();\n  };\n\n  return (\n    <>\n      <header className=\"d-flex justify-content-between p-2 bg-primary text-light\">\n        <h1 className=\"fs-3\">Secret chat for Bodya and Den</h1>\n        <button onClick={SignOut} className=\"btn btn-danger\">\n          SignOut\n        </button>\n      </header>\n      <div className='mainWrap' style={{overflowX: 'hidden'}}>\n        {messages &&\n          messages.map((msg) => (\n            <ChatMessage key={msg.id} message={msg} auth={auth} />\n          ))}\n\n        <div ref={dummy}></div>\n      </div>\n\n      <form onSubmit={sendMessage} className='d-flex justify-content-center mt-2'>\n        <input\n        className='form-control w-50 me-2'\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <button type=\"submit\" className='btn btn-primary'>Send</button>\n      </form>\n    </>\n  );\n};\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? \"send\" : \"recived\";\n\n  return (\n    <div className={`shadow-sm p-3 mb-1 bg-body rounded ${messageClass}`}>\n      <img style={{width: 50, height: 50, borderRadius: '50%'}} src={photoURL} alt=\"somePic\" />\n      <p>{text}</p>\n    </div>\n  );\n}\n\nexport default ChatRoom;\n","import firebase from \"../config/firebase\";\n\nconst SignIn = ({ auth }) => {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <button onClick={signInWithGoogle} className=\"btn btn-primary\">\n      SignIn with Google\n    </button>\n  );\n};\n\nexport default SignIn;\n","import firebase from './config/firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport ChatRoom from './components/ChatRoom';\nimport SignIn from './components/SignIn';\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nfunction App() {\n\n  const [ user ] = useAuthState(auth)\n  console.log(auth.currentUser)\n  return (\n    <>\n      <header>\n\n\n      </header>\n\n      <section className='w-50 shadow-lg p-3 mb-5 bg-body rounded' style={{margin: '0 auto'}}>\n        { user ? <ChatRoom auth={auth} firestore={firestore} /> : <SignIn auth={auth} user={user}/>}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}